<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:converter="using:Syncfusion.UI.Xaml.Converters"
	xmlns:local="using:Syncfusion.UI.Xaml.Controls" xmlns:Input="using:Syncfusion.UI.Xaml.Controls.Input" xmlns:sys="using:System"
	xmlns:shared="using:Syncfusion.UI.Xaml.Primitives" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

	<Thickness x:Key="SyncfusionUpDownBorderThemeThickness">1</Thickness>

    <Thickness x:Key="SyncfusionDropDownButtonBorderThemeThickness">2 0 0 0</Thickness>

    <SolidColorBrush x:Key="SyncfusionTextBoxExtErrorThemeBrush" Color="Red" />

	<SolidColorBrush x:Key="AccentBrush" Color="#FF1FAEFF" />

	<SolidColorBrush x:Key="SyncfusionRatingItemPointerOverThemeBrush" Color="#FF8152EF"/>

	<Thickness x:Key="SyncfusionTransitionContentCotnrolThemePadding">5 0 0 0</Thickness>

	<converter:TimeFormater x:Key="timeFormater"/>
       
	<converter:DateTimeFormater x:Key="Formater"/>

	<converter:InvertBooleanConverter x:Key="BooleanConverter"/>

	<converter:OrientationToAngleConverter x:Key="AngleConverter"/>

	<converter:PrecisionToVisibilityConverter x:Key="VisibilityConverter"/>

	<converter:PrecisionToVisibilityInverseConverter x:Key="InverseConverter"/>

	<converter:Inverter x:Key="Inverter"/>

	<converter:ToolTipVisibilityConverter x:Key="ToolTipConverter"/>

	<converter:BooleanToVisibilityConverter x:Key="BooleanVisibilityConverter"/>

	<converter:InverseBooleanToVisibilityConverter x:Key="InverseBooleanVisibilityConverter" />

	<converter:BrushToColorConverter x:Key="BrushConverter"/>

	<converter:CalendarHeaderFormatter x:Key="HeaderFormatter"/>

	<converter:EmptyStringToVisibilityConverter x:Key="EmptyStringVisibilityConverter" />

    <Input:VisibilityToBooleanConverter x:Key="VisibilityToBooleanConverter"/>
    
	<Style x:Key="DownButtonStyle" TargetType="RepeatButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
										</ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Border" Background="{TemplateBinding Background}"
								BorderThickness="1" 
								BorderBrush="{TemplateBinding Background}">
							<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"                                              
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
											  Margin="{TemplateBinding Padding}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<Path x:Name="path" Data="M0,0L53.333,0 53.333,8.888 0,8.888z" Stretch="Uniform" Fill="#FFFFFFFF" Width="10" Height="10" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
							</ContentPresenter>
						</Border>
						<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
						<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Button" x:Key="DateSelectorButton">
		<Setter Property="Foreground" Value="#000000"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<Grid x:Name="RootGrid" Width="50" Height="50" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ApplicationViewStates">
								<VisualState x:Name="FullScreenLandscape"/>
								<VisualState x:Name="Filled"/>
								<VisualState x:Name="FullScreenPortrait">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Snapped">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ColorAnimation
												Storyboard.TargetName="BackgroundGlyph"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="LightGray"
												Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation
												Storyboard.TargetName="BackgroundGlyph"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="#000000"
												Duration="0"/>
										<ColorAnimation
												Storyboard.TargetName="Content"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="#FFFFFF"
												Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
												Storyboard.TargetName="FocusVisualWhite"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
										<DoubleAnimation
												Storyboard.TargetName="FocusVisualBlack"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Opacity"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<StackPanel VerticalAlignment="Center"  >
							<Grid Width="34" Height="34" Margin="8,8,5,5"  HorizontalAlignment="Center">
								<TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="45" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
								<TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontSize="45" Margin="-4,-19,0,0"/>
								<ContentPresenter x:Name="Content" HorizontalAlignment="Center" Margin="-2,-4,0,0" VerticalAlignment="Center"/>
							</Grid>
						</StackPanel>
                        <Ellipse x:Name="FocusVisualWhite" Margin="0 0 0 2" Height="42" Width="42"  IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Ellipse x:Name="FocusVisualBlack" Margin="0 0 0 2" Height="42" Width="42"  IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Content" Value="1"/>
	</Style>

    

	<Style TargetType="Input:SfRating">
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfRating">
					<Grid RenderTransformOrigin="0.5, 0.5">
						<Grid HorizontalAlignment="Left" x:Name="PART_ToolTip" >
							<Popup x:Name="PART_Popup" VerticalOffset="-65">
								<Border BorderBrush="{StaticResource ToolTipBorderThemeBrush}" 
									HorizontalAlignment="Center" VerticalAlignment="Center"
									BorderThickness="2" 
									Height="37"
									Background="{StaticResource ToolTipBackgroundThemeBrush}" 
									Padding="10 0">

									<ContentPresenter x:Name="PART_Border"  Content="{Binding PreviewValue, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												   FontSize="15" FontWeight="Bold"
												   Foreground="{StaticResource ToolTipForegroundThemeBrush}" 
													  VerticalAlignment="Center" HorizontalAlignment="Center"/>
								</Border>
							</Popup>
						</Grid>
						<Border BorderBrush="{TemplateBinding BorderBrush}" Grid.Row="1" CornerRadius="{TemplateBinding CornerRadius}" x:Name="PART_Host"
								Margin="0 0 0 0"
								BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<ItemsPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" 
											 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfRatingItem">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="UnratedFill" Value="#FFE6E6E6" />
		<Setter Property="PointerOverFill" Value="#FFADADAD" />
		<Setter Property="Width" Value="30"/>
		<Setter Property="RatedFill" Value="{StaticResource AccentBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfRatingItem">
					<Grid Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetName="MouseOverPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="Unrated"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="RatedPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Rated">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetName="RatedPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetName="Unrated"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="MouseOverPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="PART_RatingGrid"  Margin="{TemplateBinding Padding}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>

							<Path x:Name="Unrated" Fill="{TemplateBinding UnratedFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding UnratedStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding UnratedStrokeThickness}" VerticalAlignment="Stretch" Opacity="1" 
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>

							<Path x:Name="MouseOverPath" Fill="{TemplateBinding PointerOverFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding PointerOverStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding PointerOverStrokeThickness}" VerticalAlignment="Stretch" Opacity="0" Visibility="{Binding InternalPrecision, Converter={StaticResource VisibilityConverter}, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>


							<Path x:Name="RatedPath" Fill="{TemplateBinding RatedFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding RatedStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding RatedStrokeThickness}" VerticalAlignment="Stretch" Opacity="0"
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>

							<shared:LinearClipper ExpandDirection="Right" RatioVisible="{TemplateBinding InternalValue}">
								<Path x:Name="LinearCliperPath" Fill="{TemplateBinding RatedFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding RatedStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding RatedStrokeThickness}" VerticalAlignment="Stretch" 
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>
							</shared:LinearClipper>

							<Border Grid.Row="1" Margin="{TemplateBinding Margin}">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="local:LoopingSelectorItem" x:Key="LoopingSelectorItemStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border x:Name="root" Opacity="0" Background="Transparent" Padding="{TemplateBinding Padding}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>

								<VisualState x:Name="Normal"/>

								<VisualState x:Name="Expanded">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
										<DoubleAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
										<ColorAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="Black" Duration="0"/>
										<ColorAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="#CCCCCC" Duration="0"/>
										<ColorAnimation Storyboard.TargetName="Part_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#CCCCCC" Duration="0"/>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
										<DoubleAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
										<ColorAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="White" Duration="0"/>
										<ColorAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="{Binding AccentBrush, Converter={StaticResource BrushConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Duration="0"/>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border.RenderTransform>
							<TranslateTransform x:Name="Transform"/>
						</Border.RenderTransform>

						<Grid>
							<Rectangle x:Name="background" Opacity="0" Fill="Transparent"/>

							<Border BorderThickness="2" BorderBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" x:Name="Part_Border">
								<ContentPresenter Margin="1 0" x:Name="contentPresenter"/>
							</Border>
						</Grid>

					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="local:LoopingSelector" x:Key="LoopingSelectorStyle">
		<Setter Property="ItemHeight" Value="80"/>
		<Setter Property="ItemWidth" Value="80"/>
		<Setter Property="Width" Value="80" />
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="ManipulationMode" Value="All"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource LoopingSelectorItemStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Background="{TemplateBinding Background}">
						<Canvas x:Name="ItemsPanel">
							<Canvas.RenderTransform>
								<TransformGroup>
									<TranslateTransform x:Name="CenteringTransform"/>
									<TranslateTransform x:Name="PanningTransform"/>
								</TransformGroup>
							</Canvas.RenderTransform>
						</Canvas>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="local:TransitionContentControl" x:Key="HeaderStyle">
		<Setter Property="MinHeight" Value="50"/>
		<Setter Property="Margin" Value="10 0 0 0"/>
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Foreground" Value="#000000" />
		<Setter Property="FontSize" Value="22"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Transition">
			<Setter.Value>
				<local:FadeTransition />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DropDownButtonStyle" TargetType="RepeatButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
										</ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>                                            
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Border"  Background="{TemplateBinding Background}">

							<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"                                              
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  MinWidth="32"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<Path x:Name="path" Data="F1M181.297,177.841L181.205,177.746 181.385,177.563 202.804,156.146 202.804,135.07 178.497,159.373 170.847,167.026 170.666,167.205 163.107,159.653 138.804,135.345 138.804,156.42 160.219,177.841 170.76,188.379 181.297,177.841z" Stretch="Uniform" Fill="#FFFFFFFF" Width="10" Height="10" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
							</ContentPresenter>
						</Border>
						<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
						<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="DefaultMonthCellTemplate">
		<StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
			<TextBlock  FontSize="28" Margin="0 0 0 -3" Text="{Binding MonthNumber}"/>
			<TextBlock FontSize="12" FontWeight="Light" Text="{Binding MonthName}"/>
		</StackPanel>
	</DataTemplate>
    <DataTemplate x:Key="DisabledMonthCellTemplate">
        <Border Background="Gray" Margin="-3 -2">
        <StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
            <TextBlock  FontSize="28" Margin="0 0 0 -3" Text="{Binding MonthNumber}"/>
            <TextBlock FontSize="12" FontWeight="Light" Text="{Binding MonthName}"/>
        </StackPanel>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="DefaultDayCellTemplate">
		<StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
			<TextBlock  FontSize="28" Margin="0 0 0 -3" Text="{Binding DayNumber}"/>
			<TextBlock FontSize="12" FontWeight="Light" Text="{Binding DayName}"/>
		</StackPanel>
	</DataTemplate>
    <DataTemplate x:Key="DisabledDayCellTemplate">
        <Border Background="Gray" Margin="-3 -2" >
        <StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
            <TextBlock  FontSize="28" Margin="0 0 0 -3" Text="{Binding DayNumber}"/>
            <TextBlock FontSize="12" FontWeight="Light" Text="{Binding DayName}"/>
        </StackPanel>
        </Border>
    </DataTemplate>

	<DataTemplate x:Key="DefaultYearCellTemplate">
		<TextBlock FontSize="28" HorizontalAlignment="Left" Margin="2 0 0 13" Text="{Binding YearNumber}" VerticalAlignment="Bottom"/>
	</DataTemplate>
    <DataTemplate x:Key="DisabledYearCellTemplate">
        <Border Background="Gray" Margin="-3 -2">
            <TextBlock FontSize="28" HorizontalAlignment="Left" Margin="2 0 0 13" Text="{Binding YearNumber}" VerticalAlignment="Bottom"/>
        </Border>
    </DataTemplate>

    <Input:CellTemplateSelector x:Key="MonthCellTemplateSelector" DefaultTemplate="{StaticResource DefaultMonthCellTemplate}" DisabledTemplate="{StaticResource DisabledMonthCellTemplate}"/>
    <Input:CellTemplateSelector x:Key="DayCellTemplateSelector" DefaultTemplate="{StaticResource DefaultDayCellTemplate}" DisabledTemplate="{StaticResource DisabledDayCellTemplate}"/>
    <Input:CellTemplateSelector x:Key="YearCellTemplateSelector" DefaultTemplate="{StaticResource DefaultYearCellTemplate}" DisabledTemplate="{StaticResource DisabledYearCellTemplate}"/>
    
    <Style TargetType="Input:SfDateSelector">
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
		<Setter Property="Background" Value="#FFFFFF"/>
		<Setter Property="BorderBrush" Value="#000000" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="DayCellTemplate" Value="{StaticResource DefaultDayCellTemplate}"/>
        <Setter Property="DayCellTemplateSelector" Value="{StaticResource DayCellTemplateSelector}"/>
		<Setter Property="HeaderStyle" Value="{StaticResource HeaderStyle}"/>
		<Setter Property="Header" Value="Choose Date"/>
		<Setter Property="Height" Value="500"/>
		<Setter Property="MonthCellTemplate" Value="{StaticResource DefaultMonthCellTemplate}"/>
        <Setter Property="MonthCellTemplateSelector" Value="{StaticResource MonthCellTemplateSelector}"/>
		<Setter Property="ShowDoneButton" Value="True"/>
		<Setter Property="ShowCancelButton" Value="True"/>
		<Setter Property="SelectorStyle" Value="{StaticResource LoopingSelectorStyle}"/>
		<Setter Property="YearCellTemplate" Value="{StaticResource DefaultYearCellTemplate}"/>
        <Setter Property="YearCellTemplateSelector" Value="{StaticResource YearCellTemplateSelector}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfDateSelector">
					<Border  BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}">
						<Grid Background="{TemplateBinding Background}" x:Name="PART_Root" 
							  Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							  Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid VerticalAlignment="Top" Grid.Row="0" x:Name="HeaderGrid" >
								<local:TransitionContentControl Style="{TemplateBinding HeaderStyle}" IsTabStop="False"
											Content="{Binding Header,RelativeSource={RelativeSource Mode=TemplatedParent}}"
											ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"
											/>
							</Grid>
							<Grid HorizontalAlignment="Center" x:Name="LoopingSelectorGrid" Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<local:LoopingSelector x:Name="PART_Month" IsTabStop="False" 
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding MonthCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MonthCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
                                <local:LoopingSelector Grid.Column="1" x:Name="PART_Date" IsTabStop="False" 
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding DayCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding DayCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
                                <local:LoopingSelector Grid.Column="2" x:Name="PART_Year" IsTabStop="False" 
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding YearCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding YearCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}"  
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
							</Grid>

							<Grid x:Name="FooterGrid"  HorizontalAlignment="Center" Grid.Row="2" Margin="2 2 6 5">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Button  Style="{StaticResource DateSelectorButton}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" x:Name="PART_DoneButton" Margin="0 0 0 0 " Padding="20 3 20 3" Content="&#xE10B;" Grid.Column="0" HorizontalAlignment="Stretch"
									Visibility="{Binding ShowDoneButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
								<Button Style="{StaticResource DateSelectorButton}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" x:Name="PART_CancelButton" Margin="0 0 0 0" Padding="20 3 20 3"  Content="&#xE10A;" Grid.Column="1" HorizontalAlignment="Stretch" 
									Visibility="{Binding ShowCancelButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PickerTextBoxExtStyle" TargetType="Input:SfTextBoxExt">
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
		<Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
		<Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfTextBoxExt">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Border"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Border"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="PART_Border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"/>
						<TextBlock Text="{TemplateBinding Text}" Margin="{TemplateBinding BorderThickness}" x:Name="Element"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
								   Foreground="{TemplateBinding Foreground}"
								   Height="{TemplateBinding Height}"
								   Width="{TemplateBinding Width}"
								   Padding="{TemplateBinding Padding}"/>
						<ContentControl IsTabStop="False"
										Visibility="{Binding Text,Converter={StaticResource EmptyStringVisibilityConverter},RelativeSource={RelativeSource TemplatedParent}}"
										Content="{TemplateBinding Watermark}" 
										ContentTemplate="{TemplateBinding WatermarkTemplate}" 
										ContentTemplateSelector="{TemplateBinding WatermarkTemplateSelector}" 
										Margin="{TemplateBinding BorderThickness}" 
										Padding="{TemplateBinding Padding}"/>
						<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
						<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
    <Input:NameToScopeConverter x:Key="NameToScope"/>

    <Style TargetType="Input:SfDatePicker">
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"></Setter>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"></Setter>
        <Setter Property="DropDownHeight" Value="400"/>
		<Setter Property="FormatString" Value="d" />
		<Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="VerticalAlignment" Value="Center" />
        
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfDatePicker">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ErrorStates">
								<VisualState x:Name="HasError">
									<Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_TextBlock">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoError"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border  >
							<Grid >
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Input:SfTextBoxExt AllowPointerEvents="True"  
												  x:Name="PART_TextBlock" 
												  IsReadOnly="True"
                                                  FontSize="{TemplateBinding FontSize}"
                                                  FontFamily="{TemplateBinding FontFamily}"
                                                  FontStretch="{TemplateBinding FontStretch}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  FontStyle="{TemplateBinding FontStyle}"
                                                  FontWeight="{TemplateBinding FontWeight}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Padding="{TemplateBinding Padding}"
												  Style="{StaticResource PickerTextBoxExtStyle}" 
												  Text="{Binding Value,Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Background="{TemplateBinding Background}" 
												  BorderBrush="{TemplateBinding BorderBrush}"
												  BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource InverseBooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Grid.Column="0"
												  Watermark="{TemplateBinding Watermark}"
												  WatermarkTemplate="{TemplateBinding WatermarkTemplate}"
												  />

                                <Input:SfTextBoxExt Grid.Column="0" InputScope="{Binding InputScope,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource NameToScope}}" Text="{Binding Value, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  x:Name="PART_TextBoxExt" 
												  IsReadOnly="true"
                                                  FontSize="{TemplateBinding FontSize}"
                                                  FontFamily="{TemplateBinding FontFamily}"
                                                  FontStretch="{TemplateBinding FontStretch}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  FontStyle="{TemplateBinding FontStyle}"
                                                  FontWeight="{TemplateBinding FontWeight}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Padding="{TemplateBinding Padding}"
												  AllowPointerEvents="True" 
												  Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Watermark="{Binding Watermark,RelativeSource={RelativeSource TemplatedParent}}" 
												  WatermarkTemplate="{Binding WatermarkTemplate,RelativeSource={RelativeSource  TemplatedParent}}"/>
								<Rectangle Width="2" Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}" Grid.Column="1" />
								<RepeatButton x:Name="PART_DropDownButton" 
											  Style="{StaticResource DropDownButtonStyle}"  
											  IsTabStop="{Binding AllowInlineEditing,RelativeSource={RelativeSource TemplatedParent}}"
											  Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
											  Background="{Binding AccentBrush,RelativeSource={RelativeSource TemplatedParent}}"   
											  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="2" />
							</Grid>
						</Border>

						<Popup x:Name="PART_DropDown"
							   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<Grid x:Name="PART_DatePickerPage" Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" >
								<Input:SfDateSelector BorderThickness="{TemplateBinding BorderThickness}"
								Style="{Binding SelectorStyle,RelativeSource={RelativeSource Mode=TemplatedParent}}"
										BorderBrush="#000000"
										Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										x:Name="PART_DateSelector" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										SelectedDateTime="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="DefaultHourCellTemplate">
		<StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
			<TextBlock FontWeight="Light" FontSize="28" Margin="0 0 0 -3" Text="{Binding HourNumber}"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="DefaultMinuteCellTemplate">
		<StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
			<TextBlock FontWeight="Light" FontSize="28" Margin="0 0 0 -3" Text="{Binding MinuteNumber}"/>
		</StackPanel>
	</DataTemplate>

    <DataTemplate x:Key="DefaultSecondCellTemplate">
        <StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
            <TextBlock  FontWeight="Light" FontSize="28" Margin="0 0 0 -3" Text="{Binding SecondNumber}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DefaultMeridiemCellTemplate">
		<TextBlock FontWeight="Light" FontSize="28" HorizontalAlignment="Center" Text="{Binding AmPmString}" VerticalAlignment="Bottom"/>
	</DataTemplate>

	<Style TargetType="Input:SfTimeSelector">
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
		<Setter Property="Background" Value="#FFFFFF"/>
		<Setter Property="BorderBrush" Value="#000000" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="Header" Value="Choose Time"/>
		<Setter Property="Height" Value="400"/>
		<Setter Property="HeaderStyle" Value="{StaticResource HeaderStyle}"/>
		<Setter Property="HourCellTemplate" Value="{StaticResource DefaultHourCellTemplate}"/>
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="MeridiemCellTemplate" Value="{StaticResource DefaultMeridiemCellTemplate}"/>
		<Setter Property="MinuteCellTemplate" Value="{StaticResource DefaultMinuteCellTemplate}"/>
        <Setter Property="SecondCellTemplate" Value="{StaticResource DefaultSecondCellTemplate}"/>
        <Setter Property="ShowDoneButton" Value="True"/>
		<Setter Property="ShowCancelButton" Value="True"/>
		<Setter Property="SelectorStyle" Value="{StaticResource LoopingSelectorStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfTimeSelector">
					<Border BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}">

						<Grid Background="{TemplateBinding Background}" x:Name="PART_Root">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid VerticalAlignment="Top" Grid.Row="0" x:Name="HeaderGrid">
								<local:TransitionContentControl Style="{Binding HeaderStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
											Content="{Binding Header,RelativeSource={RelativeSource Mode=TemplatedParent}}"
											ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
							</Grid>
							<Grid HorizontalAlignment="Center" Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                <local:LoopingSelector x:Name="PART_Hour" IsTabStop="False" 
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding HourCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding HourCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
                                <local:LoopingSelector Grid.Column="1" x:Name="PART_Minute" IsTabStop="False" 
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														ItemTemplate="{Binding MinuteCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MinuteCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
                                <local:LoopingSelector Grid.Column="2" x:Name="PART_Second" IsTabStop="False" 
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														ItemTemplate="{Binding SecondCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding SecondCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    </local:LoopingSelector>
                                <local:LoopingSelector Grid.Column="3" x:Name="PART_Meridiem" IsTabStop="False" 
                                                       Width="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemHeight="{Binding SelectorItemHeight,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                       ItemWidth="{Binding SelectorItemWidth,RelativeSource={RelativeSource Mode=TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}"   
														ItemTemplate="{Binding MeridiemCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MeridiemCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
							</Grid>

							<Grid HorizontalAlignment="Center" Grid.Row="2" Margin="2 0 2 6" x:Name="FooterGrid">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Button Style="{StaticResource DateSelectorButton}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" x:Name="PART_SelectButton" Content="&#xE10B;"  HorizontalAlignment="Center" Grid.Row="0" Padding="20 3"
									Visibility="{Binding ShowDoneButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
								<Button Style="{StaticResource DateSelectorButton}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" x:Name="PART_CancelButton"  Content="&#xE10A;"  Grid.Column="1" HorizontalAlignment="Center" Padding="20 3"
									Visibility="{Binding ShowCancelButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
							</Grid>
						</Grid>
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfTimePicker">
        <Setter Property="Foreground" Value="Black"/>
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"></Setter>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"></Setter>
		<Setter Property="DropDownHeight" Value="400"/>
		<Setter Property="FormatString" Value="hh:mm tt"/>
		<Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="VerticalAlignment" Value="Center" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ErrorStates">
								<VisualState x:Name="HasError">
									<Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_TextBlock">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoError"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border>
							<Grid >
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Input:SfTextBoxExt AllowPointerEvents="True"  
												  x:Name="PART_TextBlock" 
												  IsReadOnly="True"
                                                  FontSize="{TemplateBinding FontSize}"
                                                  FontFamily="{TemplateBinding FontFamily}"
                                                  FontStretch="{TemplateBinding FontStretch}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  FontStyle="{TemplateBinding FontStyle}"
                                                  FontWeight="{TemplateBinding FontWeight}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Padding="{TemplateBinding Padding}" 
												  Style="{StaticResource PickerTextBoxExtStyle}" 
												  Text="{Binding Value,Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Background="{TemplateBinding Background}" 
												  BorderBrush="{TemplateBinding BorderBrush}"
												  BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource InverseBooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Grid.Column="0"
												  Watermark="{Binding Watermark,RelativeSource={RelativeSource TemplatedParent}}" 
												  WatermarkTemplate="{Binding WatermarkTemplate,RelativeSource={RelativeSource  TemplatedParent}}"/>

                                <Input:SfTextBoxExt Grid.Column="0" InputScope="{Binding InputScope,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource NameToScope}}" Text="{Binding Value, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  x:Name="PART_TextBoxExt" 
												  IsReadOnly="true" 
                                                  FontSize="{TemplateBinding FontSize}"
                                                  FontFamily="{TemplateBinding FontFamily}"
                                                  FontStretch="{TemplateBinding FontStretch}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  FontStyle="{TemplateBinding FontStyle}"
                                                  FontWeight="{TemplateBinding FontWeight}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Padding="{TemplateBinding Padding}"
												  AllowPointerEvents="True" 
												  Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Watermark="{Binding Watermark,RelativeSource={RelativeSource TemplatedParent}}" 
												  WatermarkTemplate="{Binding WatermarkTemplate,RelativeSource={RelativeSource  TemplatedParent}}"/>
								<Rectangle Width="2" Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}" Grid.Column="1" />
								<RepeatButton x:Name="PART_DropDownButton" 
											  Style="{StaticResource DropDownButtonStyle}"  
											  IsTabStop="{Binding AllowInlineEditing,RelativeSource={RelativeSource TemplatedParent}}"
											  Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
											  Background="{Binding AccentBrush,RelativeSource={RelativeSource TemplatedParent}}"   
											  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="2" />
							</Grid>
						</Border>
						<Popup x:Name="PART_DropDown"
							   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<Grid x:Name="PART_TimePickerPage" Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" >
								<Input:SfTimeSelector BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="#000000"
										Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										x:Name="PART_TimeSelector" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										SelectedTime="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SliderThumbStyle" TargetType="Thumb">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource SliderThumbBorderThemeBrush}"/>
		<Setter Property="Background" Value="{StaticResource SliderThumbBackgroundThemeBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style  TargetType="Input:SfRangeSlider">
		<Setter Property="Background" Value="{StaticResource SliderTrackBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource SliderBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource SliderBorderThemeThickness}"/>
		<Setter Property="Foreground" Value="{StaticResource SliderTrackDecreaseBackgroundThemeBrush}"/>
		<Setter Property="ManipulationMode" Value="None"/>
		<Setter Property="Maximum" Value="100"/>
		<Setter Property="SmallChange" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfRangeSlider">
					<Grid Margin="{TemplateBinding Padding}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="HorizontalBorder">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderDisabledBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="VerticalBorder">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderDisabledBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreaseDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreaseDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="TopTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalInlineTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkInlineDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BottomTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="LeftTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalInlineTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkInlineDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RightTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhiteHorizontal"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlackHorizontal"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhiteVertical"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlackVertical"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="HorizontalTemplate" Background="Transparent">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Rectangle x:Name="HorizontalTrackRect" Grid.ColumnSpan="3" Fill="{TemplateBinding Background}" Grid.Row="1"/>
							<Rectangle x:Name="HorizontalDecreaseRect" Width="{TemplateBinding ActualWidth}" Fill="{TemplateBinding Foreground}" Grid.Row="1" Grid.ColumnSpan="3"/>
                            <Input:TickBar x:Name="TopTickBar" IsEnabled="False" IsHitTestVisible="False" Grid.ColumnSpan="3" 
                                           Margin="0,0,0,2" Visibility="Collapsed" VerticalAlignment="Bottom" 
                                           Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}" 
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
                                           Orientation="{TemplateBinding Orientation}" TickFrequency="{TemplateBinding TickFrequency}"
                                           LabelPlacement="{TemplateBinding LabelPlacement}"
                                           ValuePlacement="{TemplateBinding ValuePlacement}" 
                                           TickPlacement="{TemplateBinding TickPlacement}" 
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}" CustomLabels="{TemplateBinding CustomLabels}"
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"/>
                            <Input:TickBar x:Name="HorizontalInlineTickBar" IsEnabled="False" IsHitTestVisible="False" 
                                           Grid.ColumnSpan="3" Grid.Row="1" Visibility="Collapsed" Margin="0"
                                           Fill="{StaticResource SliderTickMarkInlineBackgroundThemeBrush}" 
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
                                           Orientation="{TemplateBinding Orientation}" 
                                           TickFrequency="{TemplateBinding TickFrequency}" 
                                           LabelPlacement="{TemplateBinding LabelPlacement}" 
                                           ValuePlacement="{TemplateBinding ValuePlacement}" 
                                           TickPlacement="{TemplateBinding TickPlacement}" 
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}" 
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}" 
                                           CustomLabels="{TemplateBinding CustomLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"/>
                            <Input:TickBar x:Name="BottomTickBar" IsEnabled="False" IsHitTestVisible="False" 
                                           Grid.ColumnSpan="3" Margin="0,2,0,0" Grid.Row="2" Visibility="Collapsed" 
                                           VerticalAlignment="Top" Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}" 
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
                                           Orientation="{TemplateBinding Orientation}"
                                           TickFrequency="{TemplateBinding TickFrequency}" 
                                           LabelPlacement="{TemplateBinding LabelPlacement}"
                                           ValuePlacement="{TemplateBinding ValuePlacement}"  
                                           TickPlacement="{TemplateBinding TickPlacement}" 
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}" 
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}"
                                           CustomLabels="{TemplateBinding CustomLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"/>
							<Rectangle x:Name="HorizontalBorder" Grid.ColumnSpan="3" Grid.Row="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
							<Thumb x:Name="HorizontalRangeStartThumb" Background="{StaticResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="{StaticResource SliderTrackThemeHeight}" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="{StaticResource SliderTrackThemeHeight}" Visibility="Collapsed"/>
							<Thumb x:Name="HorizontalRangeEndThumb" Background="{StaticResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="{StaticResource SliderTrackThemeHeight}" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="{StaticResource SliderTrackThemeHeight}"/>
							<Rectangle x:Name="FocusVisualWhiteHorizontal" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
							<Rectangle x:Name="FocusVisualBlackHorizontal" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
						</Grid>
						<Grid x:Name="VerticalTemplate" Background="Transparent" Visibility="Collapsed">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Rectangle x:Name="VerticalTrackRect" Grid.Column="1" Fill="{TemplateBinding Background}" Grid.RowSpan="3"/>
							<Rectangle x:Name="VerticalDecreaseRect" Grid.Column="1" Fill="{TemplateBinding Foreground}" Grid.RowSpan="3"/>
                            <Input:TickBar IsEnabled="False" IsHitTestVisible="False" x:Name="LeftTickBar" 
                                           HorizontalAlignment="Right" Margin="0,0,2,0" Grid.RowSpan="3"
                                           Visibility="Collapsed"  Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}" 
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
                                           Orientation="{TemplateBinding Orientation}" 
                                           TickFrequency="{TemplateBinding TickFrequency}"
                                           LabelPlacement="{TemplateBinding LabelPlacement}"
                                           ValuePlacement="{TemplateBinding ValuePlacement}" 
                                           TickPlacement="{TemplateBinding TickPlacement}"
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}"
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}"
                                           CustomLabels="{TemplateBinding CustomLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"/>
                            <Input:TickBar IsEnabled="False" IsHitTestVisible="False" x:Name="VerticalInlineTickBar"
                                           Grid.Column="1" Grid.RowSpan="3" Visibility="Collapsed" Margin="0"
                                           Fill="{StaticResource SliderTickMarkInlineBackgroundThemeBrush}"
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}"
                                           Orientation="{TemplateBinding Orientation}"
                                           TickFrequency="{TemplateBinding TickFrequency}" 
                                           LabelPlacement="{TemplateBinding LabelPlacement}" 
                                           ValuePlacement="{TemplateBinding ValuePlacement}" 
                                           TickPlacement="{TemplateBinding TickPlacement}"
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}" 
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}" 
                                           CustomLabels="{TemplateBinding CustomLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"/>
                            <Input:TickBar IsEnabled="False" IsHitTestVisible="False" x:Name="RightTickBar" Grid.Column="2"
                                           HorizontalAlignment="Left" Margin="2,0,0,0" Grid.RowSpan="3"
                                           Visibility="Collapsed"  Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}"
                                           Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" 
                                           Orientation="{TemplateBinding Orientation}" 
                                           TickFrequency="{TemplateBinding TickFrequency}" 
                                           LabelPlacement="{TemplateBinding LabelPlacement}" 
                                           ValuePlacement="{TemplateBinding ValuePlacement}" 
                                           TickPlacement="{TemplateBinding TickPlacement}"
                                           ShowCustomLabels="{TemplateBinding ShowCustomLabels}" 
                                           ShowValueLabels="{TemplateBinding ShowValueLabels}" 
                                           CustomLabels="{TemplateBinding CustomLabels}"
                                           IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                           LabelOrientation="{TemplateBinding LabelOrientation}"/>
							<Rectangle x:Name="VerticalBorder" Grid.Column="1" Grid.RowSpan="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
							<Thumb x:Name="VerticalRangeStartThumb" Background="{StaticResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="{StaticResource SliderTrackThemeHeight}" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="{StaticResource SliderTrackThemeHeight}" Visibility="Collapsed"/>
							<Thumb x:Name="VerticalRangeEndThumb" Background="{StaticResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="{StaticResource SliderTrackThemeHeight}" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="{StaticResource SliderTrackThemeHeight}"/>
							<Rectangle x:Name="FocusVisualWhiteVertical" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
							<Rectangle x:Name="FocusVisualBlackVertical" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="Input:TickBar">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:TickBar">
					<Grid x:Name="PART_Layout" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="Input:TickBarItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:TickBarItem">
                    <Grid x:Name="PART_TickBarItem">
                        <Grid x:Name="BottomPanel" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Line X1="{TemplateBinding StartPointX}" X2="{TemplateBinding EndPointX}"  x:Name="PART_Line" Opacity="{TemplateBinding LineOpacity}"
                              Y1="{TemplateBinding StartPointY}" Y2="{TemplateBinding EndPointY}" StrokeThickness="1" Stroke="{TemplateBinding Fill}" VerticalAlignment="Bottom"/>                        
                        <TextBlock Text="{TemplateBinding Tick}" Margin="1" Grid.Row="1" x:Name="PART_Text" HorizontalAlignment="Left" TextTrimming="WordEllipsis" VerticalAlignment="Top" Visibility="Collapsed"/>
                        </Grid>
                        <Grid x:Name="RightPanel" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Line X1="{TemplateBinding StartPointX}" X2="{TemplateBinding EndPointX}"    x:Name="PART_LineRight" Opacity="{TemplateBinding LineOpacity}"
                              Y1="{TemplateBinding StartPointY}" Y2="{TemplateBinding EndPointY}" StrokeThickness="1" Stroke="{TemplateBinding Fill}" HorizontalAlignment="Right"/>
                            <TextBlock Text="{TemplateBinding Tick}" Margin="1" Grid.Column="1" x:Name="PART_TextRight" HorizontalAlignment="Left" TextTrimming="WordEllipsis" VerticalAlignment="Top" Visibility="Collapsed"/>
                        </Grid>
                        <Grid x:Name="TopPanel" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="10"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{TemplateBinding Tick}" Margin="1" x:Name="PART_TextTop" HorizontalAlignment="Left" TextTrimming="WordEllipsis" VerticalAlignment="Top" Visibility="Collapsed"/>
                            <Line X1="{TemplateBinding StartPointX}" X2="{TemplateBinding EndPointX}"  Grid.Row="1" x:Name="PART_LineTop" Opacity="{TemplateBinding LineOpacity}"
                              Y1="{TemplateBinding StartPointY}" Y2="{TemplateBinding EndPointY}" StrokeThickness="1" Stroke="{TemplateBinding Fill}" VerticalAlignment="Top"/>
                        </Grid>
                        <Grid x:Name="LeftPanel" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="10"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{TemplateBinding Tick}" Margin="1" x:Name="PART_TextLeft" HorizontalAlignment="Left" TextTrimming="WordEllipsis" VerticalAlignment="Top"  Visibility="Collapsed"/>
                            <Line X1="{TemplateBinding StartPointX}" X2="{TemplateBinding EndPointX}"  Grid.Column="1" x:Name="PART_LineLeft" Opacity="{TemplateBinding LineOpacity}"
                              Y1="{TemplateBinding StartPointY}" Y2="{TemplateBinding EndPointY}" StrokeThickness="1" Stroke="{TemplateBinding Fill}"/>                            
                        </Grid>
                    </Grid>
                </ControlTemplate>                
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TextBoxExtStyle" TargetType="Input:SfTextBoxExt">
		<Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
		<Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
		<Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfTextBoxExt">
					<Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ButtonStates">
								<VisualState x:Name="ButtonVisible">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeleteButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ButtonCollapsed"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PopupStates">
								<VisualState x:Name="TopLight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="2 2 2 0"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="BottomLight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="2 0 2 2"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopDark">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="BottomDark">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ErrorStates">
								<VisualState x:Name="HasError">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoError"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Grid.Row="1">
							<Popup IsOpen="{TemplateBinding IsSuggestionOpen}"  x:Name="PART_Popup"
								   >
								<Grid Background="{StaticResource ToolTipBackgroundThemeBrush}">

									<Input:SuggestionBox x:Name="PART_SuggestionBox" ItemsSource="{TemplateBinding Suggestions}"
                                                         MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                         ScrollViewer.VerticalScrollBarVisibility="Auto"
														 SelectedIndex="{Binding SuggestionIndex, Mode=TwoWay, 
                                                         RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														 BorderBrush="{TemplateBinding BorderBrush}"/>
								</Grid>
							</Popup>
						</Grid>
						<Grid>
							<Grid.Resources>
								<Style x:Name="DeleteButtonStyle" TargetType="Button">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="Button">
												<Grid>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="PointerOver">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBackgroundThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBorderThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverForegroundThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Pressed">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBackgroundThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBorderThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedForegroundThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
																	<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="BorderElement" BorderBrush="{StaticResource TextBoxButtonBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
													<Border x:Name="BackgroundElement" Background="{StaticResource TextBoxButtonBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}">
														<TextBlock x:Name="GlyphElement" Foreground="{StaticResource TextBoxButtonForegroundThemeBrush}" FontFamily="{StaticResource SymbolThemeFontFamily}" HorizontalAlignment="Center" Text="&#xE0A4;" VerticalAlignment="Center"/>
													</Border>
												</Grid>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Grid.Resources>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
							<Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
							<ContentControl x:Name="PART_Watermark" IsTabStop="False" Content="{TemplateBinding Watermark}" ContentTemplate="{TemplateBinding WatermarkTemplate}" ContentTemplateSelector="{TemplateBinding WatermarkTemplateSelector}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
							<ScrollViewer x:Name="ContentElement" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
							<Button x:Name="DeleteButton" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" Style="{StaticResource DeleteButtonStyle}" Visibility="Collapsed" VerticalAlignment="Stretch"/>

						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfTextBoxExt" BasedOn="{StaticResource TextBoxExtStyle}"/>
    
    <Style TargetType="Input:SfNumericTextBox"  BasedOn="{StaticResource TextBoxExtStyle}">
		<Setter Property="InputScope" Value="Number"/>
	</Style>


	<Style TargetType="Input:SfDomainUpDown" x:Key="DomainUpDownStyle">
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
		<Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
		<Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
        <Setter Property="IsTabStop" Value="True"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
		<Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfDomainUpDown">
					<Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
						<local:SfUpDown x:Name="PART_UpDown" Grid.Column="1" IsTabStop="False"
									   Style="{Binding UpDownStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									   AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									  DownCommand="{Binding DecrementCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
									  SpinButtonsAlignment="{Binding SpinButtonsAlignment, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
									  UpCommand="{Binding IncrementCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<local:SfUpDown.UpDownContent>
								<Grid x:Name="InnerGrid" Background="{TemplateBinding Background}">
									<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
										<local:TransitionContentControl x:Name="PART_Content" IsTabStop="False"
																		ContentTemplate="{TemplateBinding ContentTemplate}" 
																		ContentTransitions="{TemplateBinding ContentTransition}" 
																		Content="{TemplateBinding Value}" 
																		EnableAnimation="{TemplateBinding EnableSpinAnimation}" 
																		HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
																		Margin="{StaticResource SyncfusionTransitionContentCotnrolThemePadding}" 
																		VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
											<local:TransitionContentControl.Transition>
												<local:SlideTransition Direction="Up"/>
											</local:TransitionContentControl.Transition>
										</local:TransitionContentControl>
									</Border>
								</Grid>
							</local:SfUpDown.UpDownContent>
						</local:SfUpDown>
                        <Rectangle x:Name="FocusVisualWhite" Opacity="0" IsHitTestVisible="False"  StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Rectangle x:Name="FocusVisualBlack" Opacity="0" IsHitTestVisible="False"  StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfDomainUpDown" BasedOn="{StaticResource DomainUpDownStyle}"/>



	<Style x:Key="UpButtonStyle" TargetType="RepeatButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
										</ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Border" Background="{TemplateBinding Background}"
								BorderThickness="1" 
								BorderBrush="{TemplateBinding Background}">
							<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Margin="{TemplateBinding Padding}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<Path x:Name="path" Data="M19.833,0L32.501,0 32.501,19.833999 52.334,19.833999 52.334,32.500999 32.501,32.500999 32.501,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z" Stretch="Uniform" Fill="#FFFFFFFF" Width="10" Height="10" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
							</ContentPresenter>
						</Border>
						<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
						<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="NumericRepeatButtonStyle" TargetType="local:SfUpDown">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:SfUpDown">
					<Grid x:Name="PART_OuterGrid">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<ContentControl x:Name="PART_Content" Content="{TemplateBinding UpDownContent}" Margin="{StaticResource SyncfusionUpDownBorderThemeThickness}"
										HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
						<RepeatButton x:Name="PART_DownButton" Background="{TemplateBinding AccentBrush}"
									  VerticalAlignment="Stretch" Margin="{StaticResource SyncfusionUpDownBorderThemeThickness}" Grid.Column="1" IsTabStop="False" 
									  Style="{StaticResource DownButtonStyle}" Command="{TemplateBinding DownCommand}"/>
						<RepeatButton x:Name="PART_UpButton" Background="{TemplateBinding AccentBrush}" 
									  VerticalAlignment="Stretch" Margin="{StaticResource SyncfusionUpDownBorderThemeThickness}" Grid.Column="2" IsTabStop="False"
									  Style="{StaticResource UpButtonStyle}" Command="{TemplateBinding UpCommand}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfNumericUpDown" x:Key="NumericUpDownStyle">
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
		<Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
		<Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
		<Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
		<Setter Property="UpDownStyle" Value="{StaticResource NumericRepeatButtonStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfNumericUpDown">
					<Grid x:Name="PART_OuterGrid">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ErrorStates">
								<VisualState x:Name="HasError">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_Content">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoError"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<local:SfUpDown x:Name="PART_UpDown"  IsTabStop="False"    
									   Style="{Binding UpDownStyle, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										   VerticalContentAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" DownCommand="{Binding SpinDownCommand, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" SpinButtonsAlignment="{Binding SpinButtonsAlignment, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" UpCommand="{Binding SpinUpCommand, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<local:SfUpDown.UpDownContent>
								<Grid>
                                    <Input:SfNumericTextBox x:Name="PART_Content" FontSize="{TemplateBinding FontSize}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" AllowNull="{Binding AllowNull, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														    Culture="{Binding Culture, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                                            FormatString="{Binding FormatString, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            MaximumNumberDecimalDigits="{Binding MaximumNumberDecimalDigits, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            ParsingMode="{Binding ParsingMode, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            BlockCharactersOnTextInput="{Binding BlockCharactersOnTextInput, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            TextAlignment="{Binding TextAlignment, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"                                                             
                                                            Value="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            WatermarkTemplate="{Binding WatermarkTemplate, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                                            WatermarkTemplateSelector="{Binding WatermarkTemplateSelector, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                                            Watermark="{Binding Watermark, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </Grid>
							</local:SfUpDown.UpDownContent>
						</local:SfUpDown>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfNumericUpDown" BasedOn="{StaticResource NumericUpDownStyle}"/>

	<Style TargetType="local:TransitionContentControl" x:Key="Editors_HeaderStyle">
		<Setter Property="Height" Value="30"/>
		<Setter Property="Margin" Value="2"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Transition">
			<Setter.Value>
				<local:FadeTransition />
			</Setter.Value>
		</Setter>
	</Style>



	<DataTemplate x:Key="DefaultCellTemplate">
		<Grid>
			<TextBlock Text="{Binding Day}" 
					   VerticalAlignment="Bottom"
					   Margin="3"/>
		</Grid>
	</DataTemplate>

    <DataTemplate x:Key="DisabledCellTemplate">
        <Grid>
            <TextBlock Text="{Binding Day}" 
					   VerticalAlignment="Bottom" Foreground="Gray" Opacity="1"
					   Margin="3"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DefaultHeaderTemplate">
		<Grid>
			<TextBlock Text="{Binding Converter={StaticResource HeaderFormatter}}"
					   FontSize="22" Margin="0 5"/>
		</Grid>
	</DataTemplate>

    <ControlTemplate TargetType="Button" x:Name="DefaultPreviousScrollButtonTemplate">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ellipse">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Triangle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#2FA0D5"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ellipse">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#2FA0D5"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Triangle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#ECEEEE"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ellipse">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Triangle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="PointerFocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Ellipse x:Name="ellipse"
                  Canvas.Top="50"
                  Canvas.Left="50"
                  Fill="{TemplateBinding Background}"
                  Margin="3" Width="25" Height="25"
                  StrokeThickness="{TemplateBinding BorderThickness}"
                  Stroke="{TemplateBinding BorderBrush}">
                </Ellipse>
                <Border x:Name="Border" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Path x:Name="Triangle" 
                          Data="F1M646.688,13.5518L646.783,13.4593 646.965,13.639 668.383,35.0583 689.459,35.0583 665.155,10.751 657.503,3.10126 657.323,2.92023 664.876,-4.63837 689.184,-28.9417 668.109,-28.9417 646.688,-7.52637 636.15,3.01398 646.688,13.5518z" Stretch="Uniform" Fill="{TemplateBinding Foreground}" Width="12" Height="12" 
                          Margin="-0.5,0,1.3,0" RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <RotateTransform Angle="180" />
                                    <ScaleTransform ScaleX="-1" ScaleY="-1" />
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </Border>
            </Grid>
           <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Name="DefaultNextScrollButtonTemplate">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ellipse">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Triangle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#2FA0D5"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ellipse">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#2FA0D5"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Triangle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#ECEEEE"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ellipse">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Triangle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="PointerFocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Ellipse x:Name="ellipse"
                  Canvas.Top="50"
                  Canvas.Left="50"
                  Fill="{TemplateBinding Background}"
                  Margin="3" Width="25" Height="25"
                  StrokeThickness="{TemplateBinding BorderThickness}"
                  Stroke="{TemplateBinding BorderBrush}">
                </Ellipse>
                <Border x:Name="Border" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Path x:Name="Triangle" 
                          Data="F1M646.688,13.5518L646.783,13.4593 646.965,13.639 668.383,35.0583 689.459,35.0583 665.155,10.751 657.503,3.10126 657.323,2.92023 664.876,-4.63837 689.184,-28.9417 668.109,-28.9417 646.688,-7.52637 636.15,3.01398 646.688,13.5518z" Stretch="Uniform" Fill="{TemplateBinding Foreground}" Width="12" Height="12" 
                          Margin="-1,0,-1,0" RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <RotateTransform Angle="0" />
                                    <ScaleTransform ScaleX="-1" ScaleY="-1" />
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </Border>
            </Grid>
            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        </Grid>
    </ControlTemplate>
   
    
    <DataTemplate x:Key="DefaultBlackOutTemplate">
		<Grid>
			<TextBlock Text="&#xE106;" Foreground="#FFA5A5A5"
					   VerticalAlignment="Top" FontFamily="Segoe UI Symbol"
					   Margin="3" HorizontalAlignment="Right"/>
            <TextBlock Text="{Binding Day}" Foreground="#FFA5A5A5"
					   VerticalAlignment="Bottom"
					   Margin="3"/>
		</Grid>
	</DataTemplate>

	<Style TargetType="Input:CalendarDayButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:CalendarDayButton">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ActiveStates">
								<VisualState x:Name="Active">
									<Storyboard>
										<DoubleAnimation To="1" Duration="0"
														 Storyboard.TargetName="PART_Content"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InActive">
									<Storyboard>
										<DoubleAnimation To="0.6" Duration="0"
														 Storyboard.TargetName="PART_Content"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Background)" Storyboard.TargetName="PART_Content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPointerOverBackgroundThemeBrush}">
   
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                               <VisualState x:Name="Disabled">
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_PointerOver" d:IsOptimized="True" To="1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Focus" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerFocused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Focus" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CalendarStates">
								<VisualState x:Name="Today">
									<Storyboard >
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Today" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="PART_Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<SolidColorBrush Color="White"/>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Other"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Selected" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Multiple">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Selected" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_MultiSelect" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LongPress">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"  Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="Part_Popup" d:IsOptimized="True">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="True"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Part_Popup" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_PointerOver" d:IsOptimized="True"/>
                                        <Storyboard x:Name="Storyboard_Copy1">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="Part_Circle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.867">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <BackEase Amplitude="0.5"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <BackEase Amplitude="0.5"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="Part_Circle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.867">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <BackEase Amplitude="0.5"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <BackEase Amplitude="0.5"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Part_Circle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <BackEase Amplitude="0.5"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <BackEase Amplitude="0.5"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Part_Circle">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <BackEase Amplitude="0.5"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <BackEase Amplitude="0.5"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                             
                            </VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="PART_PointerOver"  Fill="{StaticResource ButtonPointerOverBackgroundThemeBrush}" Opacity="0"/>
						<Rectangle x:Name="PART_PointerPressed" Fill="{StaticResource ButtonPressedBackgroundThemeBrush}" Opacity="0"/>
						<Rectangle x:Name="PART_Today" Fill="{StaticResource AccentBrush}" Opacity="0"/>
						<Rectangle x:Name="PART_Focus" Stroke="{StaticResource ApplicationForegroundThemeBrush}" Margin="1" Opacity="0" StrokeDashArray="2 2"/>
						<Rectangle x:Name="PART_Selected" Fill="{StaticResource AccentBrush}" Opacity="0"/>
                        
                        <Path  x:Name="PART_MultiSelect" HorizontalAlignment="Right"  VerticalAlignment="Top" Opacity="0" Data="M-150.204,626.126C-152.317,626.126 -154.429,626.126 -156.541,626.126 -167.642,633.42 -180.629,646.047 -189.668,657.238 -190.916,658.782 -192.945,662.362 -193.701,662.422 -194.041,662.448 -198.024,659.719 -198.614,659.297 -202.818,656.279 -205.779,653.709 -209.257,650.899 -211.248,652.172 -212.879,653.805 -214.153,655.797 -206.627,665.074 -200.283,675.534 -193.124,685.18 -181.491,665.11 -168.473,644.683 -152.796,629.006 -151.735,627.946 -149.817,626.933 -150.204,626.126z" Stretch="Uniform" Fill="{StaticResource ButtonForegroundThemeBrush}" Width="10" Height="8" Margin="5" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <RotateTransform Angle="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>

                        <Popup Name="Part_Popup" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalOffset="0" HorizontalOffset="0" Margin="10"  Opacity="0" IsHitTestVisible="False">
                            <StackPanel>
                                <Ellipse Width="16"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{StaticResource AccentBrush}"  Height="16" x:Name="Part_Circle" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <CompositeTransform/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                              
                            </StackPanel>
                        </Popup>
                        <local:TransitionContentControl 
							x:Name="PART_Content" IsTabStop="False"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}">
							<local:TransitionContentControl.Transition>
								<local:SlideTransition Direction="Left" Duration="0:0:2"/>
							</local:TransitionContentControl.Transition>
						</local:TransitionContentControl>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{StaticResource ButtonForegroundThemeBrush}"/>
	</Style>

	<Style TargetType="Input:SfCalendar">
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="ManipulationMode" Value="TranslateY"/>
		<Setter Property="CellTemplate" Value="{StaticResource DefaultCellTemplate}"/>
        <Setter Property="PreviousScrollButtonTemplate" Value="{StaticResource DefaultPreviousScrollButtonTemplate}"/>
        <Setter Property="NextScrollButtonTemplate" Value="{StaticResource DefaultNextScrollButtonTemplate}"/>
		<Setter Property="BlackOutCellTemplate" Value="{StaticResource DefaultBlackOutTemplate}"/>
        <Setter Property="DisabledCellTemplate" Value="{StaticResource DisabledCellTemplate}"/>
		<Setter Property="HeaderTemplate" Value="{StaticResource DefaultHeaderTemplate}"/>
		<Setter Property="Width" Value="380"/>
		<Setter Property="Height" Value="260"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfCalendar">
					<Grid Background="{TemplateBinding Background}">
                       <Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition />
						</Grid.RowDefinitions>

						<Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button  Grid.Column="0" HorizontalAlignment="Left" Name="PART_Previous" Template="{Binding PreviousScrollButtonTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{Binding ShowNavigationButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="0,-5,0,0" BorderThickness="0">
                             </Button>
                            <Button Grid.Column="2"  HorizontalAlignment="Right"  Name="PART_Next"  Template="{Binding NextScrollButtonTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"  Visibility="{Binding ShowNavigationButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"  Margin="0,-5,0,0"  BorderThickness="0">
                            </Button>
							<Input:CalendarDayButton IsHitTestVisible="False" Margin="10,0,0,0" IsTabStop="False" Grid.Column="1"
								Content="{Binding DisplayDate, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
								ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{StaticResource AccentBrush}"/>
						</Grid>

						<Grid x:Name="PART_WeekDays" Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
						</Grid>

						<Input:CalendarView x:Name="PART_CalendarView" Grid.Row="2" IsTabStop="False"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:CalendarView">
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="BorderBrush" Value="{StaticResource ApplicationForegroundThemeBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:CalendarView">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid x:Name="PART_LayoutRoot">

							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition Height="Auto"/>
								<RowDefinition />
								<RowDefinition Height="Auto"/>
								<RowDefinition />
								<RowDefinition Height="Auto"/>
								<RowDefinition />
								<RowDefinition Height="Auto"/>
								<RowDefinition />
								<RowDefinition Height="Auto"/>
								<RowDefinition />
							</Grid.RowDefinitions>

							<Rectangle Height="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Row="1" Grid.ColumnSpan="13"/>
							<Rectangle Height="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Row="3" Grid.ColumnSpan="13"/>
							<Rectangle Height="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Row="5" Grid.ColumnSpan="13"/>
							<Rectangle Height="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Row="7" Grid.ColumnSpan="13"/>
							<Rectangle Height="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Row="9" Grid.ColumnSpan="13"/>

							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="1" Grid.RowSpan="11"/>
							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="3" Grid.RowSpan="11"/>
							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="5" Grid.RowSpan="11"/>
							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="7" Grid.RowSpan="11"/>
							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="9" Grid.RowSpan="11"/>
							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="11" Grid.RowSpan="11"/>

						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
    <!--Calculator-->
    <!--<SolidColorBrush x:Key="AccentBrush" Color="#FF1FAEFF" />-->

    <Input:MemoryConverter x:Key="MemoryConverter" />

    <Style x:Key="FunctionsPaneStyle" TargetType="Input:FunctionsPane">
        <Setter Property="Foreground" Value="#FF636363"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:FunctionsPane">
                    <Grid x:Name="PART_Root">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Input:CalculatorButton Grid.Column="0" x:Name="PART_Button1" IsTabStop="False"
                                                BrushOpacity="0.3"
                                                Content="MC" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="MemoryClear" />
                        <Input:CalculatorButton Grid.Column="1" x:Name="PART_Button2" IsTabStop="False"
                                                BrushOpacity="0.3"
                                                Content="MR" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="MemoryRecall" />
                        <Input:CalculatorButton Grid.Column="2" x:Name="PART_Button3" IsTabStop="False"
                                                BrushOpacity="0.3"
                                                Content="MS" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Memory" />
                        <Input:CalculatorButton Grid.Column="3" x:Name="PART_Button4" IsTabStop="False"
                                                BrushOpacity="0.3"
                                                Content="M+" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="MemoryAdd" />
                        <Input:CalculatorButton Grid.Column="4" x:Name="PART_Button5" IsTabStop="False"
                                                BrushOpacity="0.3"
                                                Content="M-" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="MemorySubract" />

                        <Input:CalculatorButton Key="Back" x:Name="PART_Button6" IsTabStop="False"
                                                Grid.Row="1"
                                                BrushOpacity="0.3"                                           
                                                FontSize="15"
                                                Function="Back" >
		  <Input:CalculatorButton.Content>
                                <Path Data="M55.59375,47.9995803833008L69.890625,62.2964553833008 84.09375,48.0933303833008 89.953125,53.9527053833008 75.703125,68.1558303833008 89.625,82.0777053833008 83.8125,87.8902053833008 69.890625,73.9683303833008 55.640625,88.2652053833008 49.78125,82.3589553833008 63.609375,67.9214553833008 49.734375,53.8589553833008 55.59375,47.9995803833008z M31.265625,40.0308303833008L30.28125,40.5933303833008 29.25,41.4370803833008 2.43749928474426,68.1558303833008 29.203125,94.8277053833008 30.28125,95.6948928833008 31.265625,96.2808303833008 119.34375,96.2808303833008 119.34375,40.0308303833008 31.265625,40.0308303833008z M30.984375,32.5308303833008L121.546875,32.5308303833008 123.5859375,32.9527053833008 125.2734375,34.1245803833008 126.421875,35.8589553833008 126.84375,37.9683303833008 126.84375,98.3433303833008 126.421875,100.452705383301 125.2734375,102.187080383301 123.5859375,103.358955383301 121.546875,103.780830383301 30.984375,103.780830383301 28.359375,103.218330383301 26.109375,101.952705383301 23.90625,100.124580383301 -8.203125,68.1558303833008 23.90625,36.1870803833008 26.109375,34.3589553833008 28.359375,33.1167678833008 30.984375,32.5308303833008z"
                                      Stretch="Uniform" Fill="{TemplateBinding Foreground}" Width="20" Height="20" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Input:CalculatorButton.Content>
                        </Input:CalculatorButton>
                        <Input:CalculatorButton Grid.Row="1" x:Name="PART_Button7" IsTabStop="False"
                                                Grid.Column="1"
                                                BrushOpacity="0.3"
                                                Content="C" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Clear" />
                        <Input:CalculatorButton Grid.Row="1" x:Name="PART_Button8" IsTabStop="False"
                                                Grid.Column="2"
                                                BrushOpacity="0.3"
                                                Content="CE" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="ClearEntry" />
                        <Input:CalculatorButton Grid.Row="1" x:Name="PART_Button9" IsTabStop="False"
                                                Grid.Column="3"
                                                BrushOpacity="0.3"
                                                Content="±" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Sign" />
                        <Input:CalculatorButton Grid.Row="1" x:Name="PART_Button10" IsTabStop="False"
                                                Grid.Column="4"
                                                BrushOpacity="0.3"
                                                Content="√" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="SquareRoot" />

                        <Input:CalculatorButton Grid.Row="2" x:Name="PART_Button11" IsTabStop="False"
                                                Grid.Column="3"
                                                BrushOpacity="0.3"
                                                Content="/" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Divide" />
                        <Input:CalculatorButton Grid.Row="3" x:Name="PART_Button12" IsTabStop="False"
                                                Grid.Column="3"
                                                BrushOpacity="0.3"
                                                FontSize="15"
                                                Function="Multiply" >		
                            <Input:CalculatorButton.Content>
                                <Path Data="M28.03125,48.5152053833008L48,68.5308303833008 67.96875,48.5152053833008 75.515625,56.1089553833008 55.546875,76.0777053833008 75.515625,96.0464553833008 67.96875,103.593330383301 48,83.6245803833008 28.03125,103.593330383301 20.484375,96.0464553833008 40.453125,76.0777053833008 20.484375,56.1089553833008 28.03125,48.5152053833008z"
                                      Stretch="Uniform" Fill="{TemplateBinding Foreground}" Width="15" Height="15" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Input:CalculatorButton.Content>
                        </Input:CalculatorButton>
                        <Input:CalculatorButton Grid.Row="4" x:Name="PART_Button13" IsTabStop="False"
                                                Grid.Column="3"
                                                BrushOpacity="0.3"
                                                FontSize="15"
                                                Function="Subract" >
		 <Input:CalculatorButton.Content>
                                <Path Data="M13.078125,59.8120803833008L82.96875,59.8120803833008 82.96875,75.9370803833008 13.078125,75.9370803833008 13.078125,59.8120803833008z"
                                      Stretch="Uniform" Fill="{TemplateBinding Foreground}" Width="15" Height="15" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Input:CalculatorButton.Content>
                        </Input:CalculatorButton>
                        <Input:CalculatorButton Grid.Row="5" x:Name="PART_Button14" IsTabStop="False"
                                                Grid.Column="3"
                                                BrushOpacity="0.3"
                                                FontSize="15"
                                                Function="Add" >
		  <Input:CalculatorButton.Content>
                                <Path Data="M39.9375,32.9527053833008L56.0625,32.9527053833008 56.0625,59.8120803833008 82.96875,59.8120803833008 82.96875,75.9370803833008 56.0625,75.9370803833008 56.0625,102.796455383301 39.9375,102.796455383301 39.9375,75.9370803833008 13.078125,75.9370803833008 13.078125,59.8120803833008 39.9375,59.8120803833008 39.9375,32.9527053833008z"
                                      Stretch="Uniform" Fill="{TemplateBinding Foreground}" Width="15" Height="15" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Input:CalculatorButton.Content>
                        </Input:CalculatorButton>
                        <Input:CalculatorButton Grid.Row="2" x:Name="PART_Button15" IsTabStop="False"
                                                Grid.Column="4"
                                                BrushOpacity="0.3"
                                                Content="%" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Percentage" />
                        <Input:CalculatorButton Grid.Row="3" x:Name="PART_Button16" IsTabStop="False"
                                                Grid.Column="4"
                                                BrushOpacity="0.3"
                                                Content="1/x" Foreground="{TemplateBinding Foreground}"
                                                FontSize="15"
                                                Function="Reciproc" />
                        <Input:CalculatorButton Grid.Row="4" x:Name="PART_Button17" IsTabStop="False"
                                                Grid.RowSpan="2"
                                                Grid.Column="4"
                                                BrushOpacity="0.3"
                                                Content="=" Foreground="{TemplateBinding Foreground}"
                                                FontSize="35"
                                                Function="Return" />
                        <Input:InputPane x:Name="PART_Input" IsTabStop="False"
                                         Grid.Row="2"
                                         Grid.RowSpan="5"
                                         Grid.ColumnSpan="3" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfCalculator">
        <Setter Property="Height" Value="380" />
        <Setter Property="Width" Value="300" />
        <Setter Property="FunctionsPaneStyle" Value="{StaticResource FunctionsPaneStyle}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfCalculator">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Input:DisplayPane Grid.ColumnSpan="2" x:Name="PART_Display"
                                               Margin="3"
                                               DisplayText="{Binding DisplayText,
                                                                     RelativeSource={RelativeSource TemplatedParent}}"
                                               Expression="{Binding Expression,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                               IsTabStop="False"
                                               Memory="{Binding Memory,
                                                                RelativeSource={RelativeSource TemplatedParent}}" />
                            <Input:FunctionsPane x:Name="PART_Functions"
                                                 Grid.Row="2"
                                                 Grid.Column="1"
                                                 IsTabStop="False"
                                                 Style="{TemplateBinding FunctionsPaneStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:CalculatorButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundThemeBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="FontWeight" Value="ExtraLight" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:CalculatorButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FF0E96CD" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBorderThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisualWhite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisualBlack"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{TemplateBinding Background}" />
                        <Rectangle Fill="White" Opacity="{TemplateBinding BrushOpacity}" />

                        <Border x:Name="Border"
                                Background="#FFD6D6D6"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              Margin="{TemplateBinding Padding}" FontSize="16"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}" />
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                                   StrokeDashArray="1,1"
                                   StrokeDashOffset="1.5"
                                   StrokeEndLineCap="Square" />
                        <Rectangle x:Name="FocusVisualBlack"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                                   StrokeDashArray="1,1"
                                   StrokeDashOffset="0.5"
                                   StrokeEndLineCap="Square" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:InputPane">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:InputPane">
                    <Grid x:Name="PART_Root">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Input:CalculatorButton Key="Number7"  IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Content="7" x:Name="PART_Digit7" />
                        <Input:CalculatorButton Key="Number8" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Column="1"
                                                Content="8" x:Name="PART_Digit8"/>
                        <Input:CalculatorButton Key="Number9" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Column="2"
                                                Content="9" x:Name="PART_Digit9"/>
                        <Input:CalculatorButton Key="Number4" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="1"
                                                Content="4" x:Name="PART_Digit4" />
                        <Input:CalculatorButton Key="Number5" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Content="5" x:Name="PART_Digit5"/>
                        <Input:CalculatorButton Key="Number6" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="1"
                                                Grid.Column="2"
                                                Content="6" x:Name="PART_Digit6"/>
                        <Input:CalculatorButton Key="Number1" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="2"
                                                Grid.Column="0"
                                                Content="1" x:Name="PART_Digit1"/>
                        <Input:CalculatorButton Key="Number2" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="2"
                                                Grid.Column="1"
                                                Content="2" x:Name="PART_Digit2"/>
                        <Input:CalculatorButton Key="Number3" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="2"
                                                Grid.Column="2"
                                                Content="3" x:Name="PART_Digit3"/>
                        <Input:CalculatorButton Key="Number0" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="3"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                Content="0" x:Name="PART_Digit0"/>
                        <Input:CalculatorButton Key="Decimal" IsTabStop="False" Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="3"
                                                Grid.Column="2"
                                                Content="." x:Name="PART_Decimal"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:DisplayPane">
        <Setter Property="BorderBrush" Value="#FFD6D6D6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#FF939292"/>
        <Setter Property="Height" Value="70" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:DisplayPane">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <TextBlock Grid.ColumnSpan="2"
                                   Margin="8" Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="Right"
                                   FontSize="14"
                                   FontWeight="ExtraLight"
                                   Text="{TemplateBinding Expression}"
                                   TextAlignment="Right"
                                   TextWrapping="Wrap" />
                        <Viewbox Grid.Row="1"
                                 Grid.Column="1"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Bottom">
                            <TextBlock Margin="8" Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="Center"
                                       FontSize="50"
                                       FontWeight="ExtraLight"
                                       Text="{Binding DisplayText,
                                                      RelativeSource={RelativeSource TemplatedParent}}" />
                        </Viewbox>
                        <TextBlock Grid.Row="1" x:Name="PART_MemorySign"
                                   Margin="8" Foreground="{TemplateBinding Foreground}"
                                   VerticalAlignment="Bottom"
                                   Text="M"
                                   Visibility="{Binding Path=Memory,
                                                        RelativeSource={RelativeSource TemplatedParent},
                                                        Converter={StaticResource MemoryConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate x:Key="DateTimeComboMonthCellTemplate">
        <TextBlock  Text="{Binding MonthName}" HorizontalAlignment="Left"/>
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboDayCellTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding DayNumber}" />
            <TextBlock Grid.Column="1" Text="{Binding DayName}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboYearCellTemplate">
        <TextBlock  HorizontalAlignment="Left" Text="{Binding YearNumber}" />
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboHourCellTemplate">
        <TextBlock  HorizontalAlignment="Left" Text="{Binding HourNumber}"  />
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboMinuteCellTemplate">
        <TextBlock  HorizontalAlignment="Left" Text="{Binding MinuteNumber}"  />
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboSecondCellTemplate">
        <TextBlock  HorizontalAlignment="Left" Text="{Binding SecondNumber}"  />
    </DataTemplate>

    <DataTemplate x:Key="DateTimeComboAmPmCellTemplate">
        <TextBlock HorizontalAlignment="Left" Text="{Binding AmPmString}"  />
    </DataTemplate>

    <Input:DisableItemTemplateSelector x:Key="DisableItemTemplateSelector" />

    <Style TargetType="Input:DateTimeComboItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Padding" Value="8,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:DateTimeComboItem">
                    <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="InnerGrid" Background="Transparent">
                            <Rectangle x:Name="PressedBackground" Fill="{StaticResource ComboBoxItemPressedBackgroundThemeBrush}" Opacity="0"/>
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="FocusVisualWhite" Opacity="0" StrokeDashOffset=".5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlack" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="Input:DateTimeItem">
        <Setter Property="Foreground" Value="{StaticResource ComboBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="{StaticResource ComboBoxBorderThemeThickness}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="Margin" Value="5,5,0,0"></Setter>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="MinHeight" Value="30"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:DateTimeItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Gray"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxSelectedPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxArrowPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxArrowDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Highlight"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxFocusedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HighlightBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedHighlightThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="0" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="40" ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                        <Rectangle x:Name="PressedBackground" Fill="{StaticResource ComboBoxPressedHighlightThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
                        <Border x:Name="HighlightBackground" BorderBrush="{StaticResource ComboBoxFocusedBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBoxFocusedBackgroundThemeBrush}" Grid.ColumnSpan="2" Opacity="0"/>
                        <Rectangle x:Name="Highlight" Fill="{StaticResource ComboBoxSelectedBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <TextBlock x:Name="DropDownGlyph" Grid.Column="1" Foreground="{StaticResource ComboBoxArrowForegroundThemeBrush}" FontWeight="Bold" FontSize="{StaticResource ComboBoxArrowThemeFontSize}" FontFamily="{StaticResource SymbolThemeFontFamily}" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,0,6,4" Text="&#xE011;" VerticalAlignment="Center"/>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" BorderBrush="{StaticResource ComboBoxPopupBorderThemeBrush}" BorderThickness="{StaticResource ComboBoxPopupBorderThemeThickness}" Background="{StaticResource ComboBoxPopupBackgroundThemeBrush}" HorizontalAlignment="Stretch">
                                <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Foreground="{StaticResource ComboBoxPopupForegroundThemeBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfDateTimeCombo">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="DayItemTemplate" Value="{StaticResource DateTimeComboDayCellTemplate}"></Setter>
        <Setter Property="DayItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="MonthItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="YearItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="TwelveHourItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="TwentyFourHourItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="MinuteItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="SecondItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="AMPMDesignatorItemTemplateSelector" Value="{StaticResource DisableItemTemplateSelector}"></Setter>
        <Setter Property="MonthItemTemplate" Value="{StaticResource DateTimeComboMonthCellTemplate}"></Setter>
        <Setter Property="YearItemTemplate" Value="{StaticResource DateTimeComboYearCellTemplate}"></Setter>
        <Setter Property="TwelveHourItemTemplate" Value="{StaticResource DateTimeComboHourCellTemplate}"></Setter>
        <Setter Property="TwentyFourHourItemTemplate" Value="{StaticResource DateTimeComboHourCellTemplate}"></Setter>
        <Setter Property="MinuteItemTemplate" Value="{StaticResource DateTimeComboMinuteCellTemplate}"></Setter>
        <Setter Property="SecondItemTemplate" Value="{StaticResource DateTimeComboSecondCellTemplate}"></Setter>
        <Setter Property="AMPMDesignatorItemTemplate" Value="{StaticResource DateTimeComboAmPmCellTemplate}"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="400"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfDateTimeCombo">
                    <Border Background="{TemplateBinding Background}">
                        <Input:DateTimeItemsControl x:Name="Part_Items">
                            <Input:DateTimeItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid />
                                </ItemsPanelTemplate>
                            </Input:DateTimeItemsControl.ItemsPanel>
                        </Input:DateTimeItemsControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="Button" x:Key="DefaultUpButtonTemplate">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Rectangle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                            </ObjectAnimationUsingKeyFrames>                          
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed"></VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="PointerFocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border">
                <Grid Width="22" Height="22">
                    <Rectangle x:Name="Rectangle" Fill="Transparent" Width="22" Height="22"/>
                    <Path x:Name="up" Width="13" Height="11" Stretch="Fill" Fill="#FF999999" Data="F1 M 143.011,160.869L 143.021,160.879L 143.001,160.898L 140.771,163.129L 140.771,165.325L 143.303,162.794L 144.1,161.995L 144.118,161.979L 144.906,162.764L 147.438,165.296L 147.438,163.101L 145.207,160.869L 144.108,159.773L 143.011,160.869 Z " 
                      HorizontalAlignment="Center" 
                      UseLayoutRounding="False" 
                      VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Key="DefaultDownButtonTemplate">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Rectangle">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">                        
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="PointerFocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border">
                <Grid Width="22" Height="22">
                    <Rectangle x:Name="Rectangle" Fill="Transparent" Width="22" Height="22"/>
                    <Path x:Name="down_enabled" Width="13" Height="11" Stretch="Fill" Fill="#FF999999" Data="F1 M 132.911,164.227L 132.921,164.217L 132.902,164.197L 130.671,161.967L 130.671,159.773L 133.203,162.304L 134,163.101L 134.019,163.119L 134.807,162.333L 137.338,159.8L 137.338,161.995L 135.107,164.227L 134.009,165.325L 132.911,164.227 Z " 
                      HorizontalAlignment="Center" 
                      VerticalAlignment="Center" />
                </Grid>
            </Border>
            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
        </Grid>
    </ControlTemplate>
   
    <Style TargetType="Input:SfGridSplitter">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="IsTabStop" Value="true"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="25"></Setter>
        <Setter Property="MinWidth" Value="25"></Setter>
        <Setter Property="UpButtonTemplate" Value="{StaticResource DefaultUpButtonTemplate}"/>
        <Setter Property="DownButtonTemplate" Value="{StaticResource DefaultDownButtonTemplate}"/>
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Background" Value="#FF868686"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Control">
                                <Grid x:Name="Root" Opacity=".5">

                                    <!-- Background -->
                                    <Rectangle Fill="{TemplateBinding Background}" />

                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfGridSplitter">
                    <Grid x:Name="Root" IsHitTestVisible="{TemplateBinding IsEnabled}">

                        <!-- VSM -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                           
                        </VisualStateManager.VisualStateGroups>

                        <!-- Horizontal Template -->
                        <Grid x:Name="HorizontalTemplate" Background="{TemplateBinding Background}">
                            <StackPanel Margin="0" Orientation="Horizontal" HorizontalAlignment="Center">
                                <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="3.5,0,0,0"/>
                                <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="3.5,0,0,0"/>
                                <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="3.5,0,0,0"/>
                            </StackPanel>
                            <Grid HorizontalAlignment="Right" Margin="0 0 8 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="22"/>
                                    <ColumnDefinition Width="22"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_Up" BorderThickness="0" Visibility="{Binding EnableCollapseButton,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}"  Template="{Binding UpButtonTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}" IsEnabled="{Binding Path=ElementBeforeVisibility,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource VisibilityToBooleanConverter}}"/>
                                <Button x:Name="PART_Down" Grid.Column="1"  BorderThickness="0" Visibility="{Binding EnableCollapseButton,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}" Template="{Binding DownButtonTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}" IsEnabled="{Binding Path=ElementAfterVisibility,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource VisibilityToBooleanConverter}}"/>
                            </Grid>
                        </Grid>

                        <!-- Vertical Template -->
                        <Grid x:Name="VerticalTemplate" Visibility="Collapsed" 
                              Background="{TemplateBinding Background}">
                            <Grid.Resources>
                                <ControlTemplate TargetType="Button" x:Key="DefaultRightButtonTemplate">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Rectangle">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused"/>
                                            <VisualState x:Name="PointerFocused"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="Border">
                                            <Grid Width="22" Height="22">
                                                <Rectangle x:Name="Rectangle" Fill="Transparent" Width="22" Height="22"/>
                                                <Path x:Name="right_enabled" Height="13" Width="13" Stretch="Fill" Fill="#FF999999" Data="F1 M 176.242,169.143L 176.231,169.133L 176.212,169.153L 173.981,171.383L 171.786,171.383L 174.317,168.851L 175.114,168.054L 175.133,168.036L 174.347,167.248L 171.814,164.717L 174.01,164.717L 176.242,166.947L 177.338,168.046L 176.242,169.143 Z " HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                    </Grid>                                    
                                </ControlTemplate>

                                <ControlTemplate TargetType="Button" x:Key="DefaultLeftButtonTemplate">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Rectangle">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#414242"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unfocused"/>
                                                <VisualState x:Name="PointerFocused"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="Border">
                                            <Grid  Width="22" Height="22">
                                                <Rectangle x:Name="Rectangle" Fill="Transparent" Width="22" Height="22"/>
                                                <Path x:Name="left_enabled" Height="13" Width="13" Stretch="Fill" Fill="#FF999999" Data="F1 M 172.883,159.044L 172.893,159.033L 172.912,159.054L 175.144,161.283L 177.338,161.283L 174.807,158.752L 174.01,157.955L 173.992,157.937L 174.778,157.149L 177.311,154.617L 175.115,154.617L 172.883,156.848L 171.786,157.947L 172.883,159.044 Z " HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center" />
                                            </Grid>
                                        </Border>
                                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>                                        
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                                <StackPanel Margin="0" Orientation="Vertical" VerticalAlignment="Center">
                                    <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="0,3.5,0,0"/>
                                    <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="0,3.5,0,0"/>
                                    <Ellipse Fill="White" HorizontalAlignment="Center" Height="6" VerticalAlignment="Center" Width="6" Opacity="0.35" Margin="0,3.5,0,0"/>
                                </StackPanel>
                            <Grid VerticalAlignment="Top" Margin="0 8 0 0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="22"/>
                                    <RowDefinition Height="22"/>
                                </Grid.RowDefinitions>
                                <Button x:Name="PART_Left"  BorderThickness="0" Visibility="{Binding EnableCollapseButton,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}" Template="{Binding UpButtonTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}" IsEnabled="{Binding Path=ElementBeforeVisibility,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource VisibilityToBooleanConverter}}"/>
                                <Button x:Name="PART_Right" Grid.Row="1"  BorderThickness="0" Visibility="{Binding EnableCollapseButton,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource BooleanVisibilityConverter}}" Template="{Binding DownButtonTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}" IsEnabled="{Binding Path=ElementAfterVisibility,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource VisibilityToBooleanConverter}}"/>
                            </Grid>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropDownToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
								BorderThickness="1" 
								BorderBrush="{TemplateBinding Background}">
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"                                              
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
											  Margin="{TemplateBinding Padding}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Path x:Name="path" Data="F1M181.297,177.841L181.205,177.746 181.385,177.563 202.804,156.146 202.804,135.07 178.497,159.373 170.847,167.026 170.666,167.205 163.107,159.653 138.804,135.345 138.804,156.42 160.219,177.841 170.76,188.379 181.297,177.841z" Stretch="Uniform" Fill="#FFFFFFFF" Width="10" Height="10" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
                            </ContentPresenter>
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfDropDownButton">
        <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"></Setter>
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
        <Setter Property="DropDownHeight" Value="300"></Setter>
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"></Setter>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfDropDownButton">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border" Grid.Row="0" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="0" 
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
																	VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            </ContentPresenter>
                        </Border>
                        <ToggleButton x:Name="PART_DropDownButton" Grid.Row="0" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
											  Style="{StaticResource DropDownToggleButtonStyle}" Margin="{StaticResource SyncfusionDropDownButtonBorderThemeThickness}"  Background="{TemplateBinding AccentBrush}"
											  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="1" />

                        <Popup x:Name="PART_DropDownPopup" Grid.Row="1" Grid.ColumnSpan="2" IsLightDismissEnabled="True"
							               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Border x:Name="PART_DropDown" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}"
                                     BorderThickness="{TemplateBinding BorderThickness}" Margin="0 2 0 2" MinHeight="{TemplateBinding DropDownHeight}">
                                <ContentControl x:Name="PART_DropDownContent"
														ContentTemplate="{TemplateBinding DropDownContentTemplate}" 
														Content="{TemplateBinding DropDownContent}" 
														HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
														VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                                </ContentControl>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--ComboBox Control style-->
    <Input:ControlToContentConveter x:Key="ControlToContent"/>


    <ControlTemplate TargetType="Input:SfTextBoxExt" x:Key="ComboBoxTextBoxTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBackgroundThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBorderThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="{StaticResource TextControlBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                            <DoubleAnimation Duration="0" To="{StaticResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="PointerOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                            <DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ButtonStates">
                    <VisualState x:Name="ButtonVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeleteButton">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ButtonCollapsed"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ErrorStates">
                    <VisualState x:Name="HasError">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NoError"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Grid.Resources>
                    <Style x:Name="DeleteButtonStyle" TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBackgroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBorderThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverForegroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBackgroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBorderThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedForegroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="BorderElement" BorderBrush="{StaticResource TextBoxButtonBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                        <Border x:Name="BackgroundElement" Background="{StaticResource TextBoxButtonBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}">
                                            <TextBlock x:Name="GlyphElement" Foreground="{StaticResource TextBoxButtonForegroundThemeBrush}" FontFamily="{StaticResource SymbolThemeFontFamily}" HorizontalAlignment="Center" Text="&#xE0A4;" VerticalAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                <ContentControl IsTabStop="False" x:Name="PART_Watermark" Content="{TemplateBinding Watermark}" ContentTemplate="{TemplateBinding WatermarkTemplate}" ContentTemplateSelector="{TemplateBinding WatermarkTemplateSelector}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                <ScrollViewer x:Name="ContentElement" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" 
                              Margin="0 2" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                <Button x:Name="DeleteButton" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" Style="{StaticResource DeleteButtonStyle}" Visibility="Collapsed" VerticalAlignment="Stretch"/>
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style x:Key="ComboBoxTextBoxStyle" TargetType="Input:SfTextBoxExt">
        <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
        <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
    </Style>


    <Style TargetType="Input:SfComboBox">
        <Setter Property="Foreground" Value="{StaticResource ComboBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderThemeBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ComboBoxBorderThemeThickness}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="Margin" Value="5,5,0,0"></Setter>
        <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="MinHeight" Value="30"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Validation_Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxArrowPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxArrowDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Validation_Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Highlight"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxFocusedBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxFocusedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedHighlightThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="0" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="40" ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditModeStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Editor" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Editor" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ErrorStates">
                                <VisualState x:Name="HasError">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Validation_Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Validation_Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HighlightBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_Editor">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoError"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Validation_Border" Opacity="0.5" Visibility="Collapsed" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                        <Rectangle x:Name="PressedBackground" Fill="{StaticResource ComboBoxPressedHighlightThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
                        <Border x:Name="HighlightBackground" BorderBrush="{StaticResource ComboBoxFocusedBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBoxFocusedBackgroundThemeBrush}" Grid.ColumnSpan="2" Opacity="0"/>
                        <Rectangle x:Name="Highlight" Fill="{StaticResource ComboBoxFocusedBorderThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Input:SfTextBoxExt x:Name="PART_Editor" Margin="2 2 3 2"
                                            Template="{StaticResource ComboBoxTextBoxTemplate}"
                                            Style="{StaticResource ComboBoxTextBoxStyle}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontStretch="{TemplateBinding FontStretch}"
                                            Foreground="{TemplateBinding Foreground}"
                                            FontStyle="{TemplateBinding FontStyle}"
                                            FontWeight="{TemplateBinding FontWeight}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Padding="{TemplateBinding Padding}" 
											Background="{TemplateBinding Background}" 
                                            SearchItemPath="{TemplateBinding DisplayMemberPath}" 
                                            AutoCompleteItemTemplate="{TemplateBinding ItemTemplate}" 
                                            WatermarkTemplate="{TemplateBinding WatermarkTemplate}" 
                                            WatermarkTemplateSelector="{TemplateBinding WatermarkTemplateSelector}" 
                                            Watermark="{TemplateBinding Watermark}" 
                                            Visibility="Collapsed" BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="0"
                                            SuggestionMode="StartsWith" 
                                            AutoCompleteMode="Append" 
                                            IgnoreCase="True"/>
                        <TextBlock  x:Name="DropDownGlyph" Grid.Column="1" FontWeight="Bold" FontSize="{StaticResource ComboBoxArrowThemeFontSize}" FontFamily="{StaticResource SymbolThemeFontFamily}" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,0,6,4" Text="&#xE011;" VerticalAlignment="Center"/>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" BorderBrush="{StaticResource ComboBoxPopupBorderThemeBrush}" BorderThickness="{StaticResource ComboBoxPopupBorderThemeThickness}" Background="{StaticResource ComboBoxPopupBackgroundThemeBrush}" HorizontalAlignment="Stretch">
                                <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Foreground="{StaticResource ComboBoxPopupForegroundThemeBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Input:SfComboBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Padding" Value="8,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Input:SfComboBoxItem">
                    <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="InnerGrid" Background="Transparent">
                            <Rectangle x:Name="PressedBackground" Fill="{StaticResource ComboBoxItemPressedBackgroundThemeBrush}" Opacity="0"/>
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="FocusVisualWhite" Opacity="0" StrokeDashOffset=".5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                            <Rectangle x:Name="FocusVisualBlack" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

